{"ast":null,"code":"import React,{useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{getImages}from\"../../actions/index.js\";import Loading from\"../Loading/Loading\";import\"./styles/style.css\";var Images=function Images(){var dispatch=useDispatch();var feed=useSelector(function(state){return state.fetchImages.images;});useEffect(function(){dispatch(getImages());},[dispatch]);return feed.length===0?/*#__PURE__*/React.createElement(Loading,null):/*#__PURE__*/React.createElement(\"div\",{className:\"images\"},feed.map(function(image,i){return/*#__PURE__*/React.createElement(\"img\",{key:i,src:image.link_url,alt:\"\"});}));};export default Images;","map":{"version":3,"sources":["/Users/timothychoe/Desktop/Untitled-/src/components/Images/Images.js"],"names":["React","useEffect","useDispatch","useSelector","getImages","Loading","Images","dispatch","feed","state","fetchImages","images","length","map","image","i","link_url"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,SAAT,KAA0B,wBAA1B,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAO,oBAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CACA,GAAIM,CAAAA,IAAI,CAAGL,WAAW,CAAC,SAACM,KAAD,QAAWA,CAAAA,KAAK,CAACC,WAAN,CAAkBC,MAA7B,EAAD,CAAtB,CAEAV,SAAS,CAAC,UAAM,CACdM,QAAQ,CAACH,SAAS,EAAV,CAAR,CACD,CAFQ,CAEN,CAACG,QAAD,CAFM,CAAT,CAIA,MAAOC,CAAAA,IAAI,CAACI,MAAL,GAAgB,CAAhB,cACL,oBAAC,OAAD,MADK,cAGL,2BAAK,SAAS,CAAC,QAAf,EACGJ,IAAI,CAACK,GAAL,CAAS,SAACC,KAAD,CAAQC,CAAR,qBACR,2BAAK,GAAG,CAAEA,CAAV,CAAa,GAAG,CAAED,KAAK,CAACE,QAAxB,CAAkC,GAAG,CAAC,EAAtC,EADQ,EAAT,CADH,CAHF,CASD,CAjBD,CAmBA,cAAeV,CAAAA,MAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImages } from \"../../actions/index.js\";\nimport Loading from \"../Loading/Loading\";\nimport \"./styles/style.css\";\n\nconst Images = () => {\n  const dispatch = useDispatch();\n  let feed = useSelector((state) => state.fetchImages.images);\n\n  useEffect(() => {\n    dispatch(getImages());\n  }, [dispatch]);\n\n  return feed.length === 0 ? (\n    <Loading />\n  ) : (\n    <div className=\"images\">\n      {feed.map((image, i) => (\n        <img key={i} src={image.link_url} alt=\"\"></img>\n      ))}\n    </div>\n  );\n};\n\nexport default Images;\n"]},"metadata":{},"sourceType":"module"}