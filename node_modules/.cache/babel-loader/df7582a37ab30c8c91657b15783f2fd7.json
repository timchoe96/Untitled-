{"ast":null,"code":"var _jsxFileName = \"/Users/timothychoe/Desktop/Untitled-/src/components/Journal/Journal.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../Loading/Loading\";\nimport search from \"./images/search.svg\";\nimport close from \"./images/close.png\";\nimport { searchToggle } from \"../../actions/index.js\";\nimport { searching } from \"../../actions/index.js\";\nimport \"./styles/style.css\";\n\nconst Journal = () => {\n  let journal = useSelector(state => state.fetchJournal.journal);\n  let input = useSelector(state => state.searching);\n  let opacity = useSelector(state => state.search.opacity);\n  let width = useSelector(state => state.search.width);\n  const dispatch = useDispatch();\n  console.log(journal);\n  return journal.length === 0 ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    onClick: () => dispatch(searchToggle({\n      opacity: \"1\",\n      width: \"100%\"\n    })),\n    src: search,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchBar\",\n    style: {\n      opacity: opacity,\n      width: width\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: search,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => dispatch(searching(event.target.value)),\n    placeholder: \"Search for entry\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    onClick: () => dispatch(searchToggle({\n      opacity: \"0\",\n      width: \"0\"\n    })),\n    className: \"close\",\n    src: close,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"journal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, journal.map((entry, i) => /*#__PURE__*/React.createElement(Link, {\n    style: {\n      textDecoration: \"none\",\n      color: \"black\"\n    },\n    key: i,\n    to: `/Journal/${i}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"entryContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"\",\n    src: entry.images[0].url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, `Title: ${entry.title}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, `Entry: 000${journal.length - i}`), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }, `Posted: ${entry.published.slice(0, 10)}`))))))));\n};\n\nexport default Journal;","map":{"version":3,"sources":["/Users/timothychoe/Desktop/Untitled-/src/components/Journal/Journal.js"],"names":["React","useSelector","useDispatch","Link","Loading","close","searchToggle","searching","Journal","journal","state","fetchJournal","input","opacity","search","width","dispatch","console","log","length","event","target","value","map","entry","i","textDecoration","color","images","url","title","published","slice"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../Loading/Loading\";\nimport search from \"./images/search.svg\";\nimport close from \"./images/close.png\";\nimport { searchToggle } from \"../../actions/index.js\";\nimport { searching } from \"../../actions/index.js\";\nimport \"./styles/style.css\";\n\nconst Journal = () => {\n  let journal = useSelector((state) => state.fetchJournal.journal);\n  let input = useSelector((state) => state.searching);\n  let opacity = useSelector((state) => state.search.opacity);\n  let width = useSelector((state) => state.search.width);\n  const dispatch = useDispatch();\n  console.log(journal);\n\n  return journal.length === 0 ? (\n    <Loading />\n  ) : (\n    <div className=\"grid\">\n      <div className=\"search\">\n        <img\n          onClick={() =>\n            dispatch(searchToggle({ opacity: \"1\", width: \"100%\" }))\n          }\n          src={search}\n          alt=\"\"\n        ></img>\n        <div className=\"searchBar\" style={{ opacity: opacity, width: width }}>\n          <img src={search} alt=\"\"></img>\n          <input\n            onChange={(event) => dispatch(searching(event.target.value))}\n            placeholder=\"Search for entry\"\n            type=\"text\"\n          ></input>\n          <img\n            onClick={() => dispatch(searchToggle({ opacity: \"0\", width: \"0\" }))}\n            className=\"close\"\n            src={close}\n            alt=\"\"\n          ></img>\n        </div>\n      </div>\n      <div className=\"journal\">\n        {journal.map((entry, i) => (\n          <Link\n            style={{ textDecoration: \"none\", color: \"black\" }}\n            key={i}\n            to={`/Journal/${i}`}\n          >\n            <div className=\"entryContainer\">\n              <img alt=\"\" src={entry.images[0].url}></img>\n              <div className=\"hover\">\n                <div className=\"title\">{`Title: ${entry.title}`}</div>\n                <div className=\"info\">\n                  <div>{`Entry: 000${journal.length - i}`}</div>\n                  <div>{`Posted: ${entry.published.slice(0, 10)}`}</div>\n                </div>\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Journal;\n"]},"metadata":{},"sourceType":"module"}